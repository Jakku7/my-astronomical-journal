{"remainingRequest":"/Users/jakubgluba/Documents/git/my-astronomical-journal/node_modules/babel-loader/lib/index.js!/Users/jakubgluba/Documents/git/my-astronomical-journal/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/jakubgluba/Documents/git/my-astronomical-journal/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jakubgluba/Documents/git/my-astronomical-journal/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/jakubgluba/Documents/git/my-astronomical-journal/src/components/Planets.vue?vue&type=template&id=44da8e5b&scoped=true","dependencies":[{"path":"/Users/jakubgluba/Documents/git/my-astronomical-journal/src/components/Planets.vue","mtime":1610483545887},{"path":"/Users/jakubgluba/Documents/git/my-astronomical-journal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jakubgluba/Documents/git/my-astronomical-journal/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/jakubgluba/Documents/git/my-astronomical-journal/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/jakubgluba/Documents/git/my-astronomical-journal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jakubgluba/Documents/git/my-astronomical-journal/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCB7IHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhJZCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoImRhdGEtdi00NGRhOGU1YiIpOwoKX3B1c2hTY29wZUlkKCJkYXRhLXYtNDRkYThlNWIiKTsKCnZhciBfaG9pc3RlZF8xID0gewogIGtleTogMCwKICBjbGFzczogInBsYW5ldC10aXRsZSIKfTsKdmFyIF9ob2lzdGVkXzIgPSB7CiAga2V5OiAxLAogIGNsYXNzOiAic3lzdGVtLXRpdGxlIgp9OwoKdmFyIF9ob2lzdGVkXzMgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJiciIsIG51bGwsIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF80ID0gewogIGNsYXNzOiAic3lzdGVtLWRpc3RhbmNlIgp9Owp2YXIgX2hvaXN0ZWRfNSA9IHsKICBjbGFzczogInNvbGFyLXN5c3RlbSIKfTsKCl9wb3BTY29wZUlkKCk7CgpleHBvcnQgdmFyIHJlbmRlciA9IC8qI19fUFVSRV9fKi9fd2l0aElkKGZ1bmN0aW9uIChfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBbJHByb3BzLnNpbmdsZSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiaDYiLCBfaG9pc3RlZF8xLCBfdG9EaXNwbGF5U3RyaW5nKCRwcm9wcy5wbGFuZXQpLCAxCiAgLyogVEVYVCAqLwogICkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCAhJHByb3BzLnNpbmdsZSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiaDYiLCBfaG9pc3RlZF8yLCBbX2NyZWF0ZVRleHRWTm9kZShfdG9EaXNwbGF5U3RyaW5nKCRvcHRpb25zLnN5c3RlbVN0YXJzWzBdLm5hbWUpLCAxCiAgLyogVEVYVCAqLwogICksIF9ob2lzdGVkXzMsIF9jcmVhdGVWTm9kZSgic3BhbiIsIF9ob2lzdGVkXzQsIF90b0Rpc3BsYXlTdHJpbmcoJG9wdGlvbnMuc3lzdGVtU3RhcnNbMF0uZGVzY3JpcHRpb24pLCAxCiAgLyogVEVYVCAqLwogICldKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSksIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNSwgWyhfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdCgkb3B0aW9ucy5zeXN0ZW1TdGFycywgZnVuY3Rpb24gKHN0YXIpIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiaW1nIiwgewogICAgICBrZXk6IHN0YXIubmFtZSwKICAgICAgc3JjOiByZXF1aXJlKCIuLi9hc3NldHMvcGxhbmV0cy8iLmNvbmNhdChzdGFyLnBpY3R1cmUpKSwKICAgICAgYWx0OiBzdGFyLm5hbWUsCiAgICAgIHRpdGxlOiBzdGFyLm5hbWUsCiAgICAgIGNsYXNzOiAic3VuIiwKICAgICAgc3R5bGU6IHsKICAgICAgICB3aWR0aDogc3Rhci5zaXplSW5QaXhlbHNbMF0gKyAncHgnLAogICAgICAgIGhlaWdodDogc3Rhci5zaXplSW5QaXhlbHNbMV0gKyAncHgnCiAgICAgIH0KICAgIH0sIG51bGwsIDEyCiAgICAvKiBTVFlMRSwgUFJPUFMgKi8KICAgICwgWyJzcmMiLCAiYWx0IiwgInRpdGxlIl0pOwogIH0pLCAxMjgKICAvKiBLRVlFRF9GUkFHTUVOVCAqLwogICkpLCAoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJG9wdGlvbnMuc3lzdGVtUGxhbmV0cywgZnVuY3Rpb24gKHBsYW5ldCkgewogICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCB7CiAgICAgIGtleTogcGxhbmV0Lm5hbWUsCiAgICAgIGNsYXNzOiAib3JiaXQiLAogICAgICBzdHlsZTogewogICAgICAgIHdpZHRoOiBwbGFuZXQud2lkdGggKyAncHgnLAogICAgICAgIGhlaWdodDogcGxhbmV0LndpZHRoICsgJ3B4JywKICAgICAgICBhbmltYXRpb25EdXJhdGlvbjogcGxhbmV0LmFuaW1hdGlvblRpbWUgKyAncycKICAgICAgfQogICAgfSwgW19jcmVhdGVWTm9kZSgiZGl2IiwgewogICAgICBjbGFzczogInBsYW5ldCIsCiAgICAgIHN0eWxlOiB7CiAgICAgICAgd2lkdGg6IHBsYW5ldC5zaXplSW5QaXhlbHNbMF0gKyAncHgnLAogICAgICAgIGhlaWdodDogcGxhbmV0LnNpemVJblBpeGVsc1sxXSArICdweCcsCiAgICAgICAgbGVmdDogJ2NhbGMoNTAlICsnICsgcGxhbmV0LndpZHRoIC8gMiArICdweCknCiAgICAgIH0KICAgIH0sIFtfY3JlYXRlVk5vZGUoImltZyIsIHsKICAgICAgc3JjOiByZXF1aXJlKCIuLi9hc3NldHMvcGxhbmV0cy8iLmNvbmNhdChwbGFuZXQucGljdHVyZSkpLAogICAgICBhbHQ6IHBsYW5ldC5uYW1lLAogICAgICB0aXRsZTogcGxhbmV0Lm5hbWUsCiAgICAgIGNsYXNzOiAicGxhbmV0LXBpY3R1cmUiLAogICAgICBzdHlsZTogewogICAgICAgIHdpZHRoOiBwbGFuZXQuc2l6ZUluUGl4ZWxzWzBdICsgJ3B4JywKICAgICAgICBoZWlnaHQ6IHBsYW5ldC5zaXplSW5QaXhlbHNbMV0gKyAncHgnLAogICAgICAgIGxlZnQ6ICdjYWxjKDUwJSArJyArIHBsYW5ldC53aWR0aCAvIDIgKyAncHgpJywKICAgICAgICBhbmltYXRpb25EdXJhdGlvbjogcGxhbmV0LmFuaW1hdGlvblRpbWUgLyAyICsgJ3MnCiAgICAgIH0KICAgIH0sIG51bGwsIDEyCiAgICAvKiBTVFlMRSwgUFJPUFMgKi8KICAgICwgWyJzcmMiLCAiYWx0IiwgInRpdGxlIl0pXSwgNAogICAgLyogU1RZTEUgKi8KICAgICldLCA0CiAgICAvKiBTVFlMRSAqLwogICAgKTsKICB9KSwgMTI4CiAgLyogS0VZRURfRlJBR01FTlQgKi8KICApKV0pXSwgNjQKICAvKiBTVEFCTEVfRlJBR01FTlQgKi8KICApOwp9KTs="},{"version":3,"sources":["/Users/jakubgluba/Documents/git/my-astronomical-journal/src/components/Planets.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <h6 v-if=\"single\" class=\"planet-title\">{{ planet }}</h6>\n  <h6 v-if=\"!single\" class=\"system-title\">\n    {{ systemStars[0].name }}<br /><span class=\"system-distance\">\n      {{ systemStars[0].description }}</span\n    >\n  </h6>\n  <div class=\"solar-system\">\n    <img\n      v-for=\"star in systemStars\"\n      v-bind:key=\"star.name\"\n      :src=\"require(`../assets/planets/${star.picture}`)\"\n      v-bind:alt=\"star.name\"\n      v-bind:title=\"star.name\"\n      class=\"sun\"\n      :style=\"{\n        width: star.sizeInPixels[0] + 'px',\n        height: star.sizeInPixels[1] + 'px',\n      }\"\n    />\n    <div\n      v-for=\"planet in systemPlanets\"\n      v-bind:key=\"planet.name\"\n      class=\"orbit\"\n      :style=\"{\n        width: planet.width + 'px',\n        height: planet.width + 'px',\n        animationDuration: planet.animationTime + 's',\n      }\"\n    >\n      <div\n        class=\"planet\"\n        :style=\"{\n          width: planet.sizeInPixels[0] + 'px',\n          height: planet.sizeInPixels[1] + 'px',\n          left: 'calc(50% +' + planet.width / 2 + 'px)',\n        }\"\n      >\n        <img\n          :src=\"require(`../assets/planets/${planet.picture}`)\"\n          v-bind:alt=\"planet.name\"\n          v-bind:title=\"planet.name\"\n          class=\"planet-picture\"\n          :style=\"{\n            width: planet.sizeInPixels[0] + 'px',\n            height: planet.sizeInPixels[1] + 'px',\n            left: 'calc(50% +' + planet.width / 2 + 'px)',\n            animationDuration: planet.animationTime / 2 + 's',\n          }\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { planets } from \"../data/planets.js\";\nexport default {\n  name: \"Planets\",\n  props: {\n    single: Boolean,\n    planet: String,\n    system: String,\n  },\n  computed: {\n    systemPlanets() {\n      const filteredPlanets = planets.filter((element) => {\n        return element.type !== \"star\";\n      });\n      return filteredPlanets.filter((element) => {\n        if (!this.single) {\n          return element.system === this.system;\n        }\n        return element.name === this.planet;\n      });\n    },\n    systemStars() {\n      const filteredStars = planets.filter((element) => {\n        return element.type === \"star\";\n      });\n      return filteredStars.filter((element) => {\n        return element.system === this.system;\n      });\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.solar-system {\n  transform: rotateX(75deg);\n  transform-style: preserve-3d;\n  height: 800px;\n  display: block;\n  width: 100%;\n  position: relative;\n}\n.orbit {\n  border: 0.15rem solid rgba(190, 190, 190, 0.075);\n  display: block;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate3d(-50%, -50%, 0);\n  transition: border 0.2s ease-in-out;\n  transform-style: preserve-3d;\n  border-radius: 50%;\n  animation-name: orbit;\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n}\n.planet-title {\n  top: 100px;\n  position: absolute;\n  color: white;\n  font-size: 30px;\n  opacity: 0.1;\n  font-family: \"Astrolab\";\n}\n.system-title {\n  top: 100px;\n  position: absolute;\n  color: white;\n  font-size: 30px;\n  opacity: 0.1;\n  font-family: \"Astrolab\";\n}\n.system-distance {\n  font-size: 18px;\n}\n.planet {\n  position: absolute;\n  top: 50%;\n  transition: 0.3s ease-in-out;\n  transform-style: preserve-3d;\n  transform: translate(-50%, -50%) rotateX(90deg) rotateY(90deg) rotateZ(0);\n  display: flex;\n}\n.sun {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%) rotateX(-75deg) rotateY(0) rotateZ(0);\n  transform-style: preserve-3d;\n}\n.planet-picture {\n  animation-name: rotation3d;\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n  transform-style: preserve-3d;\n  transform: translate(-50%, -50%) rotateX(90deg) rotateY(90deg) rotateZ(0);\n  display: flex;\n}\n@keyframes orbit {\n  0% {\n    transform: translate3d(-50%, -50%, 0) rotateZ(0);\n  }\n  100% {\n    transform: translate3d(-50%, -50%, 0) rotateZ(-360deg);\n  }\n}\n\n@keyframes orbit3d {\n  0% {\n    transform: translate3d(-50%, -50%, 0) rotateZ(0);\n  }\n  100% {\n    transform: translate3d(-50%, -50%, 0) rotateZ(-360deg);\n  }\n}\n@keyframes rotation3d {\n  0% {\n    transform: rotateY(-90deg) rotateZ(0);\n  }\n  100% {\n    transform: rotateY(90deg) rotateZ(0);\n  }\n}\n</style>\n"],"sourceRoot":""}]}